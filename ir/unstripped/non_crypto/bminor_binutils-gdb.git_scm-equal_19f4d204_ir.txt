Function main @ 0x400005
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I32 t16:Ity_I32 t17:Ity_I32 t18:Ity_I32 t19:Ity_I32 t20:Ity_I32 t21:Ity_I32 t22:Ity_I32 t23:Ity_I32 t24:Ity_I32 t25:Ity_I32 t26:Ity_I32 t27:Ity_I32 t28:Ity_I32 t29:Ity_I32 t30:Ity_I32 t31:Ity_I32 t32:Ity_I32 t33:Ity_I32 t34:Ity_I32 t35:Ity_I32 t36:Ity_I32 t37:Ity_I32 t38:Ity_I32 t39:Ity_I1 t40:Ity_I32 t41:Ity_I32 t42:Ity_I32 t43:Ity_I32 t44:Ity_I32 t45:Ity_I32 t46:Ity_I1 t47:Ity_I32 t48:Ity_I32 t49:Ity_I32 t50:Ity_I32 t51:Ity_I32 t52:Ity_I32 t53:Ity_I32 t54:Ity_I32 t55:Ity_I32 t56:Ity_I1 t57:Ity_I32 t58:Ity_I32 t59:Ity_I32 t60:Ity_I32 t61:Ity_I32 t62:Ity_I32 t63:Ity_I32 t64:Ity_I1 t65:Ity_I32 t66:Ity_I32 t67:Ity_I32 t68:Ity_I32 t69:Ity_I32 t70:Ity_I32 t71:Ity_I32 t72:Ity_I32 t73:Ity_I32 t74:Ity_I1 t75:Ity_I32 t76:Ity_I32 t77:Ity_I32 t78:Ity_I32 t79:Ity_I32 t80:Ity_I32 t81:Ity_I1 t82:Ity_I32 t83:Ity_I32 t84:Ity_I32 t85:Ity_I32 t86:Ity_I32 t87:Ity_I32 t88:Ity_I32 t89:Ity_I32 t90:Ity_I32 t91:Ity_I1 t92:Ity_I32 t93:Ity_I32 t94:Ity_I32 t95:Ity_I1 t96:Ity_I1 t97:Ity_I1 t98:Ity_I32

   00 | ------ IMark(0x400004, 2, 1) ------
   01 | t0 = GET:I32(itstate)
   02 | t1 = Shr32(t0,0x08)
   03 | t32 = And32(t0,0x000000f0)
   04 | t31 = Xor32(t32,0x000000e0)
   05 | t33 = GET:I32(cc_op)
   06 | t30 = Or32(t33,t31)
   07 | t34 = GET:I32(cc_dep1)
   08 | t35 = GET:I32(cc_dep2)
   09 | t36 = GET:I32(cc_ndep)
   10 | t37 = armg_calculate_condition(t30,t34,t35,t36):Ity_I32
   11 | t39 = CmpNE32(t32,0x00000000)
   12 | t38 = ITE(t39,t37,0x00000001)
   13 | t45 = GET:I32(r3)
   14 | t46 = CmpNE32(t38,0x00000000)
   15 | t7 = if (t46) ILGop_Ident32(LDle(0x0040000c)) else t45
   16 | ------ IMark(0x400006, 2, 1) ------
   17 | t9 = Shr32(t1,0x08)
   18 | t49 = And32(t1,0x000000f0)
   19 | t48 = Xor32(t49,0x000000e0)
   20 | t47 = Or32(t33,t48)
   21 | t54 = armg_calculate_condition(t47,t34,t35,t36):Ity_I32
   22 | t56 = CmpNE32(t49,0x00000000)
   23 | t55 = ITE(t56,t54,0x00000001)
   24 | t60 = Add32(t7,0x0040000a)
   25 | t64 = CmpNE32(t55,0x00000000)
   26 | t62 = ITE(t64,t60,t7)
   27 | PUT(r3) = t62
   28 | PUT(pc) = 0x00400009
   29 | ------ IMark(0x400008, 2, 1) ------
   30 | t16 = Shr32(t9,0x08)
   31 | t67 = And32(t9,0x000000f0)
   32 | t66 = Xor32(t67,0x000000e0)
   33 | t65 = Or32(t33,t66)
   34 | t72 = armg_calculate_condition(t65,t34,t35,t36):Ity_I32
   35 | t74 = CmpNE32(t67,0x00000000)
   36 | t73 = ITE(t74,t72,0x00000001)
   37 | t80 = GET:I32(r0)
   38 | t81 = CmpNE32(t73,0x00000000)
   39 | t21 = if (t81) ILGop_Ident32(LDle(t62)) else t80
   40 | PUT(r0) = t21
   41 | PUT(pc) = 0x0040000b
   42 | ------ IMark(0x40000a, 2, 1) ------
   43 | t23 = Shr32(t16,0x08)
   44 | t84 = And32(t16,0x000000f0)
   45 | t83 = Xor32(t84,0x000000e0)
   46 | t82 = Or32(t33,t83)
   47 | t89 = armg_calculate_condition(t82,t34,t35,t36):Ity_I32
   48 | t91 = CmpNE32(t84,0x00000000)
   49 | t90 = ITE(t91,t89,0x00000001)
   50 | PUT(itstate) = t16
   51 | t95 = CmpNE32(t23,0x00000000)
   52 | if (t95) { PUT(pc) = 0x40000b; Ijk_NoDecode }
   53 | PUT(itstate) = t23
   54 | t97 = 32to1(t90)
   55 | t96 = Not1(t97)
   56 | if (t96) { PUT(pc) = 0x40000d; Ijk_Boring }
   57 | t28 = GET:I32(lr)
   NEXT: PUT(pc) = t28; Ijk_Ret
}

